name: Build & deploy
on:
  push:
    branches-ignore: 
      - '**'
    tags:
      - 'v*'

jobs:
    deploy-cdn:
    name: Deploy to alt:V CDN
    runs-on: ubuntu-18.04
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}
          
      - name: Download windows artifacts
        uses: actions/download-artifact@v2
        with:
          name: js-module-windows
          path: dist-windows
          
      - name: Download linux artifacts
        uses: actions/download-artifact@v2
        with:
          name: js-module-linux
          path: dist-linux

      - name: Extract version
        id: version
        shell: bash
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Install upload tool
        run: npm i @altmp/upload-tool@latest

      - name: Copy files to dist
        run: mkdir .dist && cp -R * .dist

      - name: Deploy to cdn
        run: npx alt-upload .dist example-resources $VERSION
        env:
          CI_UPLOAD_URL: ${{ secrets.CI_UPLOAD_URL }}
          CI_DEPLOY_TOKEN: ${{ secrets.CI_DEPLOY_TOKEN }}
          VERSION: ${{ steps.version.outputs.VERSION }}

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-18.04
    steps:
      - name: Extract version
        id: version
        shell: bash
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.version.outputs.VERSION }}
